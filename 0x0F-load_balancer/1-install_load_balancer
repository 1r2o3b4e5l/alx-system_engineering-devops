#!/usr/bin/env bash
# This script installs and configures HAproxy on a new Ubuntu server to distribute traffic between web-01 and web-02 using a round-robin algorithm

# Exit immediately if a command exits with a non-zero status
set -e

# Update package list and install HAproxy
sudo apt-get update -y
sudo apt-get install haproxy -y

# Configure HAproxy
sudo bash -c "cat > /etc/haproxy/haproxy.cfg <<EOF
# Global settings
global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&version=2.0.17&config=intermediate&guideline=5.6
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-bind-options no-sslv3

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 404 /etc/haproxy/errors/404.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Frontend configuration
frontend http_front
    bind *:80
    default_backend http_back

# Backend configuration
backend http_back
    balance roundrobin
    server web-01 54.227.197.236:80 check
    server web-02 3.90.81.35:80 check
EOF"

# Enable and restart HAproxy service
sudo systemctl enable haproxy
sudo systemctl restart haproxy

